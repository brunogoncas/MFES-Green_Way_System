class Device

instance variables

	private id : seq of char;
	private car : seq of char;
	private plate : seq of char;
	private owner : Client;
	private history : seq of GenericEntry := [];
	
operations

	public Device: seq of char * seq of char * seq of char * Client ==> Device
		Device(dId, dCar, dPlate, dClient) == (id := dId; car := dCar; plate := dPlate; owner := dClient; return self)
		post id = dId and car = dCar and plate = dPlate and owner = dClient;
	
	public addToHistory : GenericEntry ==> ()
		addToHistory(dEntry) == history := [dEntry] ^ history 
		post history = [dEntry] ^ history~;
	
	public GetId: () ==> seq of char
		GetId() == return id;
			
	public GetCar: () ==> seq of char
		GetCar() == return car;
			
	public pure GetPlate: () ==> seq of char
		GetPlate() == return plate;
		
	public GetOwner: () ==> Client
		GetOwner() == return owner;
		
end Device